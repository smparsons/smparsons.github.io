{"version":3,"sources":["webpack:///./src/components/commentsSection.tsx","webpack:///./src/templates/blogPost.tsx"],"names":["CommentsSection","wrapperRef","React","script","document","createElement","src","async","setAttribute","current","appendChild","Array","from","head","querySelectorAll","filter","styleTag","textContent","includes","forEach","removeChild","className","ref","BlogPostTemplate","data","location","pageContext","post","markdownRemark","frontmatter","title","date","description","siteTitle","site","siteMetadata","previous","next","excerpt","undefined","dangerouslySetInnerHTML","__html","html","to","fields","slug","rel","pageQuery"],"mappings":"8HAiCeA,G,2BA/BS,WACtB,IAAMC,EAAaC,WAuBnB,OArBAA,aAAgB,WACd,IAAMC,EAASC,SAASC,cAAc,UAStC,OARAF,EAAOG,IAAM,gCACbH,EAAOI,OAAQ,EACfJ,EAAOK,aAAa,OAAQ,iCAC5BL,EAAOK,aAAa,QAAS,eAC7BL,EAAOK,aAAa,aAAc,YAClCL,EAAOK,aAAa,cAAe,aACnCP,EAAWQ,QAAQC,YAAYP,GAExB,WAEqBQ,MAAMC,KAAKR,SAASS,KAAKC,iBAAiB,UACjEC,QAAO,SAACC,GAAD,OAAcA,EAAUC,YAAaC,SAAS,iBAEtCC,SAAQ,SAACH,GACzBZ,SAASS,KAAKO,YAAYJ,SAG7B,IAGD,uBAAKK,UAAU,qBAAqBC,IAAKrB,GACvC,yC,kBC5BN,0CAmEesB,UA1DU,SAAC,GAAwE,IAAtEC,EAAsE,EAAtEA,KAAMC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,YACpCC,EAAOH,EAAKI,eAD8E,EAE3DD,EAAKE,YAAlCC,EAFwF,EAExFA,MAAOC,EAFiF,EAEjFA,KAAMC,EAF2E,EAE3EA,YACfC,EAAYT,EAAKU,KAAMC,aAAcL,MACnCM,EAAmBV,EAAnBU,SAAUC,EAASX,EAATW,KAElB,OACE,gBAAC,IAAD,CAAQZ,SAAUA,EAAUK,MAAOG,GACjC,gBAAC,IAAD,CACEH,MAAOA,EACPE,YAAaA,GAAeL,EAAKW,cAAWC,IAE9C,2BAASlB,UAAU,qBACjB,8BACE,0BAAKS,GACL,6BAAQC,IAEV,2BAASS,wBAAyB,CAAEC,OAAQd,EAAKe,QACjD,2BACA,8BAAQ,gBAAC,IAAD,OACR,gBAAC,EAAD,MACA,6BAEAN,GAAYC,IACZ,2BACE,sBAAIhB,UAAU,uBACZ,0BACGe,GACC,gBAAC,IAAD,CAAMO,GAAIP,EAASQ,OAAOC,KAAMC,IAAI,QAApC,KACKV,EAASP,YAAYC,QAI9B,0BACGO,GACC,gBAAC,IAAD,CAAMM,GAAIN,EAAKO,OAAOC,KAAMC,IAAI,QAC7BT,EAAKR,YAAYC,MADpB,WAnChB,IA4DaiB,EAAY","file":"component---src-templates-blog-post-tsx-1ff774799ec65ac9e9d1.js","sourcesContent":["import * as React from \"react\"\n\nconst CommentsSection = (): JSX.Element => {\n  const wrapperRef = React.useRef() as React.MutableRefObject<HTMLDivElement>\n\n  React.useEffect(() => {\n    const script = document.createElement(\"script\")\n    script.src = \"https://utteranc.es/client.js\"\n    script.async = true\n    script.setAttribute(\"repo\", \"smparsons/smparsons.github.io\")\n    script.setAttribute(\"theme\", \"github-dark\")\n    script.setAttribute(\"issue-term\", \"pathname\")\n    script.setAttribute(\"crossorigin\", \"anonymous\")\n    wrapperRef.current.appendChild(script)\n\n    return () => {\n      // Remove unnecessary utterances styles when we're done.\n      const styleTagsToRemove = Array.from(document.head.querySelectorAll(\"style\"))\n        .filter((styleTag) => styleTag!.textContent!.includes(\"utterances\"))\n\n      styleTagsToRemove.forEach((styleTag) => {\n        document.head.removeChild(styleTag)\n      })\n    }\n  }, [])\n\n  return (\n    <div className=\"utterances-wrapper\" ref={wrapperRef}>\n      <h3>Comments</h3>\n    </div>\n  )\n}\n\nexport default CommentsSection\n","import { graphql, Link } from \"gatsby\"\nimport * as React from \"react\"\n\nimport Bio from \"../components/bio\"\nimport CommentsSection from \"../components/commentsSection\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { BlogPostBySlug } from \"./queryTypes/BlogPostBySlug\"\n\nconst BlogPostTemplate = ({ data, location, pageContext }: BlogPostTemplateProps): JSX.Element => {\n  const post = data.markdownRemark!\n  const { title, date, description } = post.frontmatter!\n  const siteTitle = data.site!.siteMetadata!.title!\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={title!}\n        description={description || post.excerpt || undefined}\n      />\n      <article className=\"blog-post-content\">\n        <header>\n          <h1>{title!}</h1>\n          <small>{date!}</small>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html! }} />\n        <hr />\n        <footer><Bio /></footer>\n        <CommentsSection />\n        <hr />\n      </article>\n      {(previous || next) && (\n        <nav>\n          <ul className=\"blog-post-navigator\">\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      )}\n    </Layout>\n  )\n}\n\ninterface BlogPostTemplateProps {\n  data: BlogPostBySlug,\n  location: Location,\n  pageContext: {\n    /* tslint:disable-next-line:no-any */\n    previous: any,\n    /* tslint:disable-next-line:no-any */\n    next: any\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}